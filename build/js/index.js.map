{"version":3,"sources":["functions.js","script.js"],"names":["appendMessage","message","you","time","messageElement","document","createElement","actualTime","innerText","classList","add","messageContainer","appendChild","userAction","action","socket","on","name","date","Date","getHours","getMinutes","io","forceNew","getElementById","messageForm","messageInput","thisName","prompt","emit","userConnected","data","dataMessage","username","length","addEventListener","e","preventDefault","value"],"mappings":"AAAA,SAAAA,cAAAC,EAAAC,GAAA,EAAAC,GAAA,GACA,MAAAC,EAAAC,SAAAC,cAAA,OAEAH,IAAAF,GAAA,IAAAM,cACAH,EAAAI,UAAAP,GAEA,IAAAC,EACAE,EAAAK,UAAAC,IAAA,WAGAN,EAAAK,UAAAC,IAAA,OAEAC,iBAAAC,YAAAR,GAGA,IAAAS,WAAA,SAAAC,EAAAZ,GAAA,GACAa,OAAAC,GAAA,QAAAF,EAAAG,IACAjB,cAAA,GAAAiB,KAAAH,IAAAZ,MAIA,SAAAK,aACA,MAAAW,EAAA,IAAAC,KACA,OAAAD,EAAAE,WAAA,IAAAF,EAAAG,aCvBA,MAAAN,OAAAO,GAAA,wBAAA,CAAAC,UAAA,IAEAZ,iBAAAN,SAAAmB,eAAA,qBACAC,YAAApB,SAAAmB,eAAA,kBACAE,aAAArB,SAAAmB,eAAA,iBAEAG,SAAAC,OAAA,sBACA5B,cAAA,UACAe,OAAAc,KAAA,WAAAF,UAEAG,cAAAjB,WAAA,aACAiB,cAAAjB,WAAA,gBACAE,OAAAC,GAAA,WAAAe,IACA,IAAAC,eAAAD,EAAAA,KAAA,CACA,IAAA7B,GAAA,EACAyB,WAAAK,YAAAC,WAAA/B,GAAA,GACAF,cAAA,GAAAgC,YAAAC,cAAAD,YAAA/B,WAAA+B,YAAA7B,OAAAD,GAAA,MAIAa,OAAAC,GAAA,eAAAe,IACA,IAAAA,EAAA9B,QAAAiC,QACAlC,cAAA,GAAA+B,EAAAd,UAAAc,EAAA9B,WAAA,KAGAwB,YAAAU,iBAAA,SAAAC,IACAA,EAAAC,iBACA,MAAApC,EAAAyB,aAAAY,MACA,IAAArC,EAAAiC,SACAlC,cAAAC,GACAc,OAAAc,KAAA,oBAAA5B,GACAyB,aAAAY,MAAA","file":"index.js","sourcesContent":["function appendMessage(message, you = true, time = false) {\r\n  const messageElement = document.createElement('div');\r\n  \r\n  if(!time) message += \" \" + actualTime();\r\n  messageElement.innerText = message;\r\n\r\n  if (you === false) {\r\n    messageElement.classList.add('not-you');\r\n    \r\n  } else {\r\n    messageElement.classList.add('you')\r\n  }\r\n  messageContainer.appendChild(messageElement);\r\n};\r\n\r\nlet userAction = function(action, you = false) {\r\n  socket.on(`user-${action}`, name => {\r\n    appendMessage(`${name} ${action}`, you)\r\n  })\r\n};\r\n\r\nfunction actualTime() {\r\n  const date = new Date();\r\n  return date.getHours() + ':' + date.getMinutes();\r\n};","const socket = io('http://localhost:3000', { 'forceNew': true });\r\n\r\nconst messageContainer = document.getElementById('message-container');\r\nconst messageForm = document.getElementById('send-container');\r\nconst messageInput = document.getElementById('message-input');\r\n\r\nconst thisName = prompt('What is your name?');\r\nappendMessage('Joined');\r\nsocket.emit('new-user', thisName);\r\n\r\nuserConnected = userAction(\"connected\");\r\nuserConnected = userAction(\"disconnected\");\r\nsocket.on('messages', data => {\r\n  for(dataMessage of data.data) {\r\n    var you = false;\r\n    if( thisName === dataMessage.username) you = true;\r\n    appendMessage(`${dataMessage.username} : ${dataMessage.message} ${dataMessage.time}`, you, true)\r\n  }\r\n});\r\n\r\nsocket.on('chat-message', data => {\r\n  if (data.message.length === 0) return;\r\n  appendMessage(`${data.name} : ${data.message}`, false)\r\n});\r\n\r\nmessageForm.addEventListener('submit', e => {\r\n  e.preventDefault();\r\n  const message = messageInput.value;\r\n  if(message.length === 0) return;\r\n  appendMessage(message)\r\n  socket.emit('send-chat-message', message);\r\n  messageInput.value = '';\r\n});"]}